set nocompatible
filetype off
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'VundleVim/Vundle.vim'
Plugin 'Valloric/YouCompleteMe'
call vundle#end()            " required
call pathogen#runtime_append_all_bundles()
call pathogen#helptags()

filetype plugin indent on    " required
filetype plugin on

set modelines=0

"
" Tab and identation
"
set expandtab
set autoindent
set backspace=indent,eol,start
set shiftwidth=4
set softtabstop=4
autocmd FileType python setlocal expandtab shiftwidth=4 softtabstop=4

"color
syntax enable
set background=light

set term=xterm-256color 
colorscheme wombat256mod
set encoding=utf-8
set scrolloff=3
set showmode
set showcmd
set hidden
set visualbell
set ttyfast
set lazyredraw
set ruler
set laststatus=2
set number


"Remap Leader key
let mapleader="\<space>"

"
"Search behavior
"
nnoremap / /\v
vnoremap / /\v
set ignorecase
set smartcase
"replace global in a line
set gdefault
set incsearch
set showmatch
set hlsearch
"Handle long line
set wrap
set formatoptions=qrn1
"set colorcolumn=85

nnoremap <leader>h :tabnext<cr>
nnoremap <leader>l :tabprevious<cr>
"configure buffer
" allow buffer to be hidden after modified
set hidden
nnoremap <leader>, :bnext<cr>
nnoremap <leader>. :bprevious<cr>
nnoremap <leader>bq :bp <bar> bd # <cr>
nnoremap <leader>bl :ls<cr>

"get rid of the arrow key
nnoremap <up> <C-w>k
nnoremap <down> <C-w>j
nnoremap <left> <C-w>h
nnoremap <right> <C-w>l
nnoremap j gj
nnoremap k gk
inoremap jj <ESC>
inoremap kk <ESC>

nnoremap <leader>w :w<CR>
nnoremap <leader>q :q<CR>

""NERDTree
map <C-e> :NERDTreeToggle<CR>:NERDTreeMirror<CR>
map <leader>e :NERDTreeFind<CR>
"Delimitmate 
au FileType * let b:delimitMate_autoclose = 1

"Enable mouse usage
set mouse=a
"Ack
nnoremap <leader>a :Ack
"Folding
nnoremap <leader>ft Vatzf
"Command-T
"let g:CommandTSearchPath = $HOME 
"Tab
nnoremap <leader>h :tabp<Cr>
nnoremap <leader>l :tabn<Cr>

"TagBar Plugin
nmap <F8> :TagbarToggle<CR>

"JSHint 
let jshint_hightligh_color = 'DarkGray'
let disable_lint = 1

"NerdCommenter
nnoremap <leader>c :call NERDComment(0,"toggle")<CR>
vnoremap <leader>c :call NERDComment(0,"toggle")<CR>

"YouCompleteMe
let g:ycm_global_ycm_extra_conf = '~/.vim/.ycm_extra_conf.py'  
let g:ycm_disable_for_files_larger_than_kb = 1000


"Copy to clipboard
set clipboard=unnamed

"airline tabline configuration
let g:airline#extensions#tabline#enabled = 1
" Show just the filename
let g:airline#extensions#tabline#fnamemod = ':t'

"YcmCompleter configuration
nnoremap <leader>g :YcmCompleter GoTo<cr>
nnoremap <leader>gd :YcmCompleter GetDoc<cr>
nnoremap <leader>gt :YcmCompleter GetType<cr>

"CtrlP
let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'
let g:ctrlp_working_path_mode = 'ra'
" Ignore some folders and files for CtrlP indexing
let g:ctrlp_custom_ignore = {
  \ 'dir':  '\.git$\|\.yardoc\|node_modules\|log\|tmp$',
  \ 'file': '\.so$\|\.dat$|\.DS_Store$'
  \ }
set wildignore+=*/tmp/*                                     " ctrlp - ignore files in tmp directories
set wildignore+=*/target/*                                  " ctrlp - ignore files in target directories
set wildignore+=*/build/*                                   " ctrlp - ignore gradle build directories
set wildignore+=*.so                                        " ctrlp - ignore .so files
set wildignore+=*.o                                         " ctrlp - ignore .o files
set wildignore+=*.class                                     " ctrlp - ignore .class files
set wildignore+=*.swp                                       " ctrlp - ignore .swp files
set wildignore+=*.zip                                       " ctrlp - ignore .zip files
set wildignore+=*.pdf                                       " ctrlp - ignore .pdf files
set wildignore+=*/node_modules/*                            " ctrlp - ignore node modules
set wildignore+=*/bower_components/*                        " ctrlp - ignore bower components
set wildignore+=*/dist/*                                    " ctrlp - ignore grunt b
"js beautify
